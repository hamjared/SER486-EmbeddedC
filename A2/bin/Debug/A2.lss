
bin/Debug/A2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00000124  00000198  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000124  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .stab         00000414  00000000  00000000  00000198  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000895  00000000  00000000  000005ac  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .comment      00000011  00000000  00000000  00000e41  2**0
                  CONTENTS, READONLY
  5 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000e54  2**2
                  CONTENTS, READONLY
  6 .debug_info   000005f4  00000000  00000000  00000e94  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000005a2  00000000  00000000  00001488  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000001a  00000000  00000000  00001a2a  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000208  00000000  00000000  00001a44  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   8:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  10:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  14:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  18:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  1c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  20:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  24:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  28:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  2c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  30:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  34:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  38:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  3c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  40:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  44:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  48:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  4c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  50:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  54:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  58:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  5c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  60:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  64:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 77 00 	call	0xee	; 0xee <main>
  78:	0c 94 90 00 	jmp	0x120	; 0x120 <_exit>

0000007c <__bad_interrupt>:
  7c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000080 <delay>:
*/

#define PINB (*((volatile char *)0x23))
#define DDRB (*((volatile char *)0x24))

void delay(){
  80:	cf 93       	push	r28
  82:	df 93       	push	r29
  84:	00 d0       	rcall	.+0      	; 0x86 <delay+0x6>
  86:	00 d0       	rcall	.+0      	; 0x88 <delay+0x8>
  88:	00 d0       	rcall	.+0      	; 0x8a <delay+0xa>
  8a:	cd b7       	in	r28, 0x3d	; 61
  8c:	de b7       	in	r29, 0x3e	; 62
    for(unsigned int i = 0 ; i < 0xFF; i++){
  8e:	1a 82       	std	Y+2, r1	; 0x02
  90:	19 82       	std	Y+1, r1	; 0x01
  92:	1e c0       	rjmp	.+60     	; 0xd0 <delay+0x50>
        for(unsigned int j = 0; j < 0xFF; j++){
  94:	1c 82       	std	Y+4, r1	; 0x04
  96:	1b 82       	std	Y+3, r1	; 0x03
  98:	11 c0       	rjmp	.+34     	; 0xbc <delay+0x3c>
                for(unsigned int k = 0; k < 0x04; k++){
  9a:	1e 82       	std	Y+6, r1	; 0x06
  9c:	1d 82       	std	Y+5, r1	; 0x05
  9e:	05 c0       	rjmp	.+10     	; 0xaa <delay+0x2a>
  a0:	8d 81       	ldd	r24, Y+5	; 0x05
  a2:	9e 81       	ldd	r25, Y+6	; 0x06
  a4:	01 96       	adiw	r24, 0x01	; 1
  a6:	9e 83       	std	Y+6, r25	; 0x06
  a8:	8d 83       	std	Y+5, r24	; 0x05
  aa:	8d 81       	ldd	r24, Y+5	; 0x05
  ac:	9e 81       	ldd	r25, Y+6	; 0x06
  ae:	04 97       	sbiw	r24, 0x04	; 4
  b0:	b8 f3       	brcs	.-18     	; 0xa0 <delay+0x20>
#define PINB (*((volatile char *)0x23))
#define DDRB (*((volatile char *)0x24))

void delay(){
    for(unsigned int i = 0 ; i < 0xFF; i++){
        for(unsigned int j = 0; j < 0xFF; j++){
  b2:	8b 81       	ldd	r24, Y+3	; 0x03
  b4:	9c 81       	ldd	r25, Y+4	; 0x04
  b6:	01 96       	adiw	r24, 0x01	; 1
  b8:	9c 83       	std	Y+4, r25	; 0x04
  ba:	8b 83       	std	Y+3, r24	; 0x03
  bc:	8b 81       	ldd	r24, Y+3	; 0x03
  be:	9c 81       	ldd	r25, Y+4	; 0x04
  c0:	8f 3f       	cpi	r24, 0xFF	; 255
  c2:	91 05       	cpc	r25, r1
  c4:	50 f3       	brcs	.-44     	; 0x9a <delay+0x1a>

#define PINB (*((volatile char *)0x23))
#define DDRB (*((volatile char *)0x24))

void delay(){
    for(unsigned int i = 0 ; i < 0xFF; i++){
  c6:	89 81       	ldd	r24, Y+1	; 0x01
  c8:	9a 81       	ldd	r25, Y+2	; 0x02
  ca:	01 96       	adiw	r24, 0x01	; 1
  cc:	9a 83       	std	Y+2, r25	; 0x02
  ce:	89 83       	std	Y+1, r24	; 0x01
  d0:	89 81       	ldd	r24, Y+1	; 0x01
  d2:	9a 81       	ldd	r25, Y+2	; 0x02
  d4:	8f 3f       	cpi	r24, 0xFF	; 255
  d6:	91 05       	cpc	r25, r1
  d8:	e8 f2       	brcs	.-70     	; 0x94 <delay+0x14>
                for(unsigned int k = 0; k < 0x04; k++){

                }
        }
    }
}
  da:	00 00       	nop
  dc:	26 96       	adiw	r28, 0x06	; 6
  de:	0f b6       	in	r0, 0x3f	; 63
  e0:	f8 94       	cli
  e2:	de bf       	out	0x3e, r29	; 62
  e4:	0f be       	out	0x3f, r0	; 63
  e6:	cd bf       	out	0x3d, r28	; 61
  e8:	df 91       	pop	r29
  ea:	cf 91       	pop	r28
  ec:	08 95       	ret

000000ee <main>:

int main(void)
{
  ee:	cf 93       	push	r28
  f0:	df 93       	push	r29
  f2:	cd b7       	in	r28, 0x3d	; 61
  f4:	de b7       	in	r29, 0x3e	; 62

    DDRB |= 0x2; // Set PB1 as an output pin
  f6:	84 e2       	ldi	r24, 0x24	; 36
  f8:	90 e0       	ldi	r25, 0x00	; 0
  fa:	24 e2       	ldi	r18, 0x24	; 36
  fc:	30 e0       	ldi	r19, 0x00	; 0
  fe:	f9 01       	movw	r30, r18
 100:	20 81       	ld	r18, Z
 102:	22 60       	ori	r18, 0x02	; 2
 104:	fc 01       	movw	r30, r24
 106:	20 83       	st	Z, r18

    while(1){
       delay();
 108:	0e 94 40 00 	call	0x80	; 0x80 <delay>
       PINB |= 0x2;
 10c:	83 e2       	ldi	r24, 0x23	; 35
 10e:	90 e0       	ldi	r25, 0x00	; 0
 110:	23 e2       	ldi	r18, 0x23	; 35
 112:	30 e0       	ldi	r19, 0x00	; 0
 114:	f9 01       	movw	r30, r18
 116:	20 81       	ld	r18, Z
 118:	22 60       	ori	r18, 0x02	; 2
 11a:	fc 01       	movw	r30, r24
 11c:	20 83       	st	Z, r18
    }
 11e:	f4 cf       	rjmp	.-24     	; 0x108 <main+0x1a>

00000120 <_exit>:
 120:	f8 94       	cli

00000122 <__stop_program>:
 122:	ff cf       	rjmp	.-2      	; 0x122 <__stop_program>
